Write a program that implements the following disk scheduling algorithms:
    • FCFS
    • SSTF
    • C-SCAN

Your program will service a disk with 10,000 cylinders numbered 0 to 9999.
The program will read a series of cylinder requests from stdin (no maximum) and service them according to the selected algorithms listed above.
There is a slight twist! A normal disk will only receive the requests as they are generated by user processes to read/write from the disk.
In this case, the stdin will have ALL of the requests available for the disk immediately.
If this were to happen in real life, then there would be another issue occur – the disk would fill its buffer of requests and not be able to consider another request until one was serviced.
For example, if the buffer size were 10, it would read 10 requests and order them according to the algorithm.
Once it serviced the first request from the buffer, then it would read the next request from stdin and add it to the buffer according to the scheduling algorithm.

A description of the command line parameters is as follows:
    • {-f|-s|-c} indicate the scheduling algorithm to use respectively.
    • -p # indicates the starting position of the disk head.
    • -b # indicates the size of the buffer.

The program will be passed the initial position of the disk head and which algorithm to use as parameters on the command line.
    ./a.out –f –p 47 –b 10

Upon completion your program will report the total amount of head movement required to service the requests.

Notes: A sample file with cylinder requests is provided for the assignment on D2L.